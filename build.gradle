
buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenLocal()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE"
    }

}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "spring-boot"
apply plugin: "war"
//apply plugin: "checkstyle"

version = '1.0'
war {
    archiveName = "mars.war"
}
description = """mars"""

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'http://maven.oschina.net/content/groups/public/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url "http://maven.springframework.org/release" }
    maven { url "http://maven.restlet.org" }
    maven { url "http://mirrors.ibiblio.org/maven2" }
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven {
        url "http://repo.baichuan-android.taobao.com/content/groups/BaichuanRepositories/"
    }
    maven { url 'https://maven.fabric.io/public' }
    jcenter()
}

ext {
    springVersion = "4.3.4.RELEASE"
    springBootVersion = "1.4.2.RELEASE"
}

// build information (appver)
task buildinfo << {
    def buildver = ""
    def tag = ""
    try {
        def revision = 'git rev-list --count HEAD'.execute().text.trim()
        def hash = 'git rev-parse --short HEAD'.execute().text.trim()
        buildver = "r${revision}-${hash}"
        tag = 'git describe --tags'.execute().text.trim()
    } catch (any) {
        println "warn! failed to get revision"
    }

    new File("src/main/resources/properties/buildinfo.properties").withWriter { w ->
        w.write("build.module=mars\n")
        w.write("build.revision=" + buildver + "\n")
        w.write("build.tag=" + tag + "\n")
        w.write("build.datetime =" + (new Date()).format("YYYY-MM-dd HH:mm:ss") + "\n")
        w.write("build.hostname=" + InetAddress.localHost.hostName)
    }
}
processResources.dependsOn buildinfo
dependencies {

    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    providedCompile("org.springframework.boot:spring-boot-starter-tomcat")
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-redis:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-mail:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-freemarker:${springBootVersion}"

    /** frontend framework */
    compile group: "org.thymeleaf",             name: "thymeleaf",                      version: "3.0.7.RELEASE"
    compile group: "org.thymeleaf",             name: "thymeleaf-spring4",              version: "3.0.7.RELEASE"
    compile group: "nz.net.ultraq.thymeleaf",   name: "thymeleaf-layout-dialect",       version: "2.2.2"
    compile group: "org.springframework.boot",  name: "spring-boot-starter-thymeleaf",  version: "${springBootVersion}"

    compile 'com.zaxxer:HikariCP:2.4.1'
    compile 'mysql:mysql-connector-java:5.1.37'
    compile "org.mybatis:mybatis-spring:1.2.3"
    compile "org.mybatis:mybatis:3.3.0"

    ///// logback //////
    compile "ch.qos.logback:logback-core:1.1.3"
    compile "ch.qos.logback:logback-classic:1.1.3"
    compile "com.googlecode.sli4j:sli4j-slf4j-logback:2.0"
    compile 'dom4j:dom4j:1.6'

    ///// commons-codec //////
    compile 'commons-codec:commons-codec:1.9'

    ///// utility, such as json, etc. //////
    compile 'com.google.code.gson:gson:2.3.1'

    ///// jsoup//////
    compile 'org.jsoup:jsoup:1.11.2'

    //// servlet and runtime dependencies ////
    compile "javax.servlet:jstl:1.2"
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat:1.2.7.RELEASE'

    //// testing supportes ////
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile "org.springframework:spring-test:${springVersion}"

    // dubbo + zookeeper
    compile(group: 'com.alibaba', name: 'dubbo', version: '2.5.3') {
        exclude(module: 'spring')
    }
    compile group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.4.6'
    compile 'com.github.sgroschupf:zkclient:0.1'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.12'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    //FastDFS
    compile group: 'com.github.tobato', name: 'fastdfs-client', version: '1.25.4-RELEASE'

    //rabbitMQ
    compile group: 'org.springframework.amqp', name: 'spring-rabbit', version: '1.6.3.RELEASE'
    compile group: 'org.springframework.amqp', name: 'spring-amqp', version: '1.6.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-activemq', version: '1.4.2.RELEASE'

    // poi
    compile group: 'org.apache.poi', name: 'poi', version: '3.16'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.16'
    compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.16'
    //quartz
    compile group: 'org.quartz-scheduler', name: 'quartz-jobs', version: '2.2.1'
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.1'
    compile group: 'com.github.pagehelper', name: 'pagehelper', version: '5.0.0'

    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.4.RELEASE'

    //aop
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.9'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.9'
    
    //asw
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.313'

    compile group: "org.apache.shiro",              name: "shiro-ehcache",          version: "1.2.4"
    compile group: "org.apache.shiro",              name: "shiro-cas",              version: "1.2.4"

    compile group: 'org.json', name: 'json', version: '20160810'

}

//mybatis generator plugin ------ start
buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.4"
    }
}

apply plugin: "com.arenagod.gradle.MybatisGenerator"

configurations {
    mybatisGenerator
}

mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/config/mybatis/mybatis-generator.xml'
}
//mybatis generator plugin ------ end